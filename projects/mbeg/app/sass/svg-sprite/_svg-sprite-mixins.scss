@import 'svg-sprite-positions';


/// Variables
$fontSize: 32px !default;
$sprite: map-get($icons, sprite);
$padding: map-get($sprite, padding);


/// Functions
// Перевод px в em
@function pxEm($px) {
  @return ($px / $fontSize) * 1em;
}

// Сбор всех атрибутов иконок в спрайте
@function spriteAttr($icon, $attr) {
	$newIcon: map-get($icons, $icon);
	@if $newIcon == null {
		@warn "Not found #{$icon}!";
	}
	@return map-get($newIcon, $attr);
}

// Присваивание атрибутов иконке
@function iconAttr($icon) {
	$attr: (
		w: spriteAttr($icon, width),
		h: spriteAttr($icon, height),
		x: spriteAttr($icon, backgroundX),
		y: spriteAttr($icon, backgroundY),
		relX: spriteAttr($icon, bgRelativeX),
		relY: spriteAttr($icon, bgRelativeY)
	);
	@return $attr;
}


// Присвоение шаблонных селекторов
%sprite {
	display: inline-block;
	font-size: $fontSize;
}

%svg-background {
	background-size: pxEm(map-get($sprite, width)) pxEm(map-get($sprite, height));
	vertical-align: middle;
	//background-repeat: no-repeat;
}

// Png fallback
%png-background {
	background-image: url(map-get($sprite, pngPath));
  background-image: url(map-get($sprite, svgPath)), none;
  //background: url(map-get($sprite, pngPath)); // влияют на масштабируемость !
  //background: url(map-get($sprite, svgPath)), transparent;
}

// Symbol
%symbol {
	stroke-width: 0;
	fill: inherit; // currentColor
	stroke: inherit; // currentColor
}


//// Mixins
/// Вставка иконки Background-image
@mixin svg-bg($iconName) {
	@extend %sprite;
	@extend %svg-background;
	@extend %png-background; // png fallback
	
	$iconProp: iconAttr($iconName);

	width: pxEm(map-get($iconProp, w));
	height: pxEm(map-get($iconProp, h));
	background-position: pxEm(map-get($iconProp, x) - $padding)
											 pxEm(map-get($iconProp, y) - $padding);
}

// Адаптивность иконки занимаемой всю ширину блока
@mixin svg-bg-full($iconName) {
	$iconProp: iconAttr($iconName);
	$hh: map-get($iconProp, h); // paddingHack height
	$ww: map-get($iconProp, w); // paddingHack width

	width: 100%;
	height: auto;
	padding-top: ($hh + $padding) / $ww * 100%; // paddingHack
	background-position: map-get($iconProp, relX) map-get($iconProp, relY);
	background-size: cover;
}


/// Вставка иконки Symbol
@mixin svg-symbol($iconName) {
	@extend %sprite;
	@extend %symbol;
	
	$iconProp: iconAttr($iconName);

	width: pxEm(map-get($iconProp, w));
	height: pxEm(map-get($iconProp, h));
}

// Адаптивность иконки занимаемой всю ширину блока
@mixin svg-symbol-outer($iconName) {
	$iconProp: iconAttr($iconName);
	$hh: map-get($iconProp, h); // paddingHack height
	$ww: map-get($iconProp, w); // paddingHack width

	position: relative;
	padding-top: $hh / $ww * 100%; // paddingHack
}
@mixin svg-symbol-inner($iconName) {
	@extend %symbol;

	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
}


//// Examples
/// Background-image

// .svg-tweetter {
// 	@include svg-bg(tweetter);
// }

// .svg-map_full-w {
// 	@include svg-bg-full(map);
// }

// .follow__icon-tweetter {
// 	@include svg-bg(tweetter);
// }

/// Symbol
// .svg-sec-two__map {
// 	@include svg-symbol(sec-two__map);
// }

// .svg-sec-two__map__container {
// 	@include svg-symbol-outer(sec-two__map);
// }
// .svg-sec-two__map__icon {
// 	@include svg-symbol-inner(sec-two__map);
// }

/// Pug mixin for symbol
// mixin svg-icon(name, mod)
// 	- mod = mod || ''
// 	svg(class="svg-" + name + ' ' + mod)
// 		use(xlink:href="#" + name)

// mixin svg-icon-full(name, mod)
// 	- mod = mod || ''
// 	div(class="svg-" + name + "__container")
// 		svg(class="svg-" + name + "__icon" + ' ' + mod)
// 			use(xlink:href="#" + name)

// +svg-icon-full('sec-two__map', 'red')

// +svg-icon('sec-two__map', 'green')